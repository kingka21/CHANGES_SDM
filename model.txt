
    model {
    # Likelihood: 
    
    for (i in 1:n){    
    y[i] ~ dnegbin(p[i],r)
    p[i] <- r/(r + lambda[i])
    log(lambda[i]) <- log.lambda[i] # log-link 
    log.lambda[i] <- alpha[site[i]] + b1[gear[i]] * x1[i] + b2[gear[i]] * x2[i] + b3[gear[i]] * x3[i] + b4[gear[i]] * x4[i] + 
                       b5[gear[i]]*x5[i] + b6[gear[i]]*x6[i] + b7[gear[i]]*x7[i] +
                      logq[gear[i]]*IND[i] + logeffort[i]
         
    } 
    
    # Level-2 of the model: site 
    for(s in 1:nsites){
    alpha[s] ~ dnorm(mu.alpha[group[s]],tau.alpha)
    }
    
     # Level-3 of the model: group (fisheries management unit regions) 
    for(j in 1:J){
    mu.alpha[j] ~ dnorm(mu.alpha2,tau.alpha2)
    }
    
    # varying betas by gear 
    for(j in 1:ngears){
    b1[j] ~ dnorm(mu.b1, tau.b1)
    b2[j] ~ dnorm(mu.b2, tau.b2)
    b3[j] ~ dnorm(mu.b3, tau.b3)
    b4[j] ~ dnorm(mu.b4, tau.b4)
    b5[j] ~ dnorm(mu.b5, tau.b5)
    b6[j] ~ dnorm(mu.b6, tau.b6)
    b7[j] ~ dnorm(mu.b7, tau.b7)
    }
    
    # Priors
    mu.alpha2 ~ dnorm(0, 0.0001)
    sigma.alpha ~ dunif(0,100)
    sigma.alpha2 ~ dunif(0,100)
    r ~ dunif(0,100)
    
    #derived quantities 
    tau.alpha <- pow(sigma.alpha,-2)
    tau.alpha2 <- pow(sigma.alpha2,-2)
    
    # priors for predictors 
     
    mu.b1 ~ dnorm(0,  0.0000001)   #non-informative
    mu.b2 ~ dnorm(0,  0.0000001)
    mu.b3 ~ dnorm(0,  0.0000001)
    mu.b4 ~ dnorm(0,  0.0000001)
    mu.b5 ~ dnorm(0,  0.0000001)
    mu.b6 ~ dnorm(0,  0.0000001)
    mu.b7 ~ dnorm(0,  0.0000001)
  

    
    sigma.b1 ~ dunif(0,100)
    sigma.b2 ~ dunif(0,100)
    sigma.b3 ~ dunif(0,100)
    sigma.b4 ~ dunif(0,100)
    sigma.b5 ~ dunif(0,100)
    sigma.b6 ~ dunif(0,100)
    sigma.b7 ~ dunif(0,100)

  tau.b1 <- pow(sigma.b1,-2)
  tau.b2 <- pow(sigma.b2,-2)
  tau.b3 <- pow(sigma.b3,-2)
  tau.b4 <- pow(sigma.b4,-2)
  tau.b5 <- pow(sigma.b5,-2)
  tau.b6 <- pow(sigma.b6,-2)
  tau.b7 <- pow(sigma.b6,-2)

    # priors for gear-specific log-catchabilities 
    for (k in 1:ngears) { 
    logq[k] ~ dnorm(0,  0.0000001)   #non-informative
    } 
    
                      
    } # end model
    
